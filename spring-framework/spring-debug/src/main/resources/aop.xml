<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.lucky.extension.selfAop"/>

    <!-- 注解通知 -->
    <bean id="logUtil" class="com.lucky.extension.selfAop.LogUtil"></bean>

    <!-- 配置切面类 -->
    <bean id="log" class="com.lucky.extension.selfAop.AopLog"></bean>


    <aop:config>
        <aop:aspect ref="logUtil">
            <!--配置切入点表达式-->
            <aop:pointcut id="myPoint" expression="execution( void com.lucky.extension.selfAop.AopLog.*(..))"/>
            <!--配置通知方法-->
            <aop:around method="logAround" pointcut-ref="myPoint"/>
            <aop:before method="logStart" pointcut-ref="myPoint"/>
            <aop:after method="logStop" pointcut-ref="myPoint"/>
            <aop:after-returning method="logReturn" pointcut-ref="myPoint" returning="result"/>
            <aop:after-throwing method="logException" pointcut-ref="myPoint" throwing="exception"/>
        </aop:aspect>
    </aop:config>


</beans>